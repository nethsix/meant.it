<% require 'validators' %>
<% require 'constants' %>
<p id="notice"><%= notice %></p>

<%
  pii_endPoints = pii.endPoints
  pii_endPoints_srcMeantItRels = ControllerHelper.mir_from_ep_srcMeantItRels(pii_endPoints)
  endPoints_srcMeantItRels = ControllerHelper.mir_from_ep_srcMeantItRels(endPoints)

  # pii_endPoints to endPoints relationship
  pii_ep_mir_ep_arr = ControllerHelper.mir_from_find_match_dstEndPoints(pii_endPoints_srcMeantItRels, endPoints)
  pii_ep_mir_ep_msg_type_arr = ControllerHelper.mir_from_mir_messageType(pii_ep_mir_ep_arr, message_type)
  pii_ep_mir_ep_msg_uniq_hash = ControllerHelper.mir_from_mir_uniqSrcMsgDstEndPoints(pii_ep_mir_ep_msg_type_arr)

  # endPoints to pii_endPoints relationship
  ep_mir_pii_ep_arr = ControllerHelper.mir_from_find_match_dstEndPoints(endPoints_srcMeantItRels, pii_endPoints)
  ep_mir_pii_ep_msg_type_arr = ControllerHelper.mir_from_mir_messageType(ep_mir_pii_ep_arr, message_type)
  ep_mir_pii_ep_msg_uniq_hash = ControllerHelper.mir_from_mir_uniqSrcMsgDstEndPoints(ep_mir_pii_ep_msg_type_arr)
%>

<div class='container'>
  <div class='span-24'>

<p>
<strong>Meant.It:</strong>
[<%= pii.pii_value  %>] <= <%= message_type %> =>
<%= endPoints[0].nick %>
</p>
<table summary="Meant.It Table"  border="0" cellspacing="0" cellpadding="0">
  <caption><em>Meant.It '[<%= pii.pii_value %>] <%= message_type %> <%= endPoints[0].nick %>'</em></caption>
  <thead>
    <tr>
      <th class='span-10'>Sender Nick</th>
      <th class='span-10'>Receiver Nick</th>
      <th class='span-2'>Count</th>
      <th class='span-2'>Value</th>
    </tr>
  </thead>
  <tbody>
<% pii_ep_mir_ep_msg_uniq_hash.each { |hash_key, mir_arr| %>
    <tr>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].src_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].dst_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <%= mir_arr.size %>
      </td>
      <td>
        Coming..
      </td>
    </tr>
<% } %>
  </tbody>
</table>
<% if pii_ep_mir_ep_msg_uniq_hash.empty? %>
<p>
Nothing yet... <b>Don't be disheartened.  They'll come!</b>
</p>
<% else %>
<p>
  <%= render :partial => "shared/limit_meant_it_rels_with_more", :locals => { :src_endpoint_id => pii_endPoints, :dst_endpoint_id => endPoints, :sender_pii_str => pii.pii_value, :receiver_nick => endPoints[0].nick, :message_type => message_type } %>
</p>
<% end %>

<table summary="Meant.It Table"  border="0" cellspacing="0" cellpadding="0">
  <caption><em>Meant.It '<%= endPoints[0].nick %> <%= message_type %> [<%= pii.pii_value %>]'</em></caption>
  <thead>
    <tr>
      <th class='span-10'>Sender Nick</th>
      <th class='span-10'>Receiver Nick</th>
      <th class='span-2'>Count</th>
      <th class='span-2'>Value</th>
    </tr>
  </thead>
  <tbody>
<% ep_mir_pii_ep_msg_uniq_hash.each { |hash_key, mir_arr| %>
    <tr>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].src_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].dst_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <%= mir_arr.size %>
      </td>
      <td>
        Coming..
      </td>
    </tr>
<% } %>
  </tbody>
</table>
<% if ep_mir_pii_ep_msg_uniq_hash.empty? %>
<p>
Nothing yet... <b>Don't be disheartened.  They'll come!</b>
</p>
<% else %>
<p>
  <%= render :partial => "shared/limit_meant_it_rels_with_more", :locals => { :src_endpoint_id => endPoints, :dst_endpoint_id => pii_endPoints, :sender_nick => endPoints[0].nick, :receiver_pii_str => pii.pii_value, :message_type => message_type } %>
</p>
<% end %>

  </div>
</div>
