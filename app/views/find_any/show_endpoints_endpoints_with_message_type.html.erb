<% require 'validators' %>
<% require 'constants' %>
<p id="notice"><%= notice %></p>

<%
  sender_srcMeantItRels = ControllerHelper.mir_from_ep_srcMeantItRels(sender_endPoints)
  receiver_srcMeantItRels = ControllerHelper.mir_from_ep_srcMeantItRels(receiver_endPoints)
  # sender to receiver relationship
  s_mir_r_arr = ControllerHelper.mir_from_find_match_dstEndPoints(sender_srcMeantItRels, receiver_endPoints)
  s_mir_r_msg_type_arr = ControllerHelper.mir_from_mir_messageType(s_mir_r_arr, message_type)
  s_mir_r_msg_uniq_hash = ControllerHelper.mir_from_mir_uniqSrcMsgDstEndPoints(s_mir_r_msg_type_arr)
  # receiver to sender relationship
  r_mir_s_arr = ControllerHelper.mir_from_find_match_dstEndPoints(receiver_srcMeantItRels, sender_endPoints)
  r_mir_s_msg_type_arr = ControllerHelper.mir_from_mir_messageType(r_mir_s_arr, message_type)
  r_mir_s_msg_uniq_hash = ControllerHelper.mir_from_mir_uniqSrcMsgDstEndPoints(r_mir_s_msg_type_arr)
%>

<p>
<strong>Meant.It:</strong>
nick:<%= sender_endPoints[0].nick %>
<= <%= message_type %> =>
nick:<%= receiver_endPoints[0].nick %>
</p>
<table summary="Meant.It Table"  border="0" cellspacing="0" cellpadding="0">
  <caption><em>Meant.It 'nick:<%= sender_endPoints[0].nick %> <%= message_type %> nick:<%= receiver_endPoints[0].nick %>'</em></caption>
  <thead>
    <tr>
      <th class='span-10'>Sender Nick</th>
      <th class='span-10'>Receiver Nick</th>
      <th class='span-2'>Count</th>
      <th class='span-2'>Value</th>
    </tr>
  </thead>
  <tbody>
<% s_mir_r_msg_uniq_hash.each { |hash_key, mir_arr| %>
    <tr>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].src_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].dst_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <%= mir_arr.size %>
      </td>
      <td>
        Coming..
      </td>
    </tr>
<% } %>
  </tbody>
</table>
<p>
<% if s_mir_r_msg_uniq_hash.empty? %>
<p>
Nothing yet... <b>Don't be disheartened.  They'll come!</b>
</p>
<% else %>
<p>
  <%= render :partial => "shared/limit_meant_it_rels_with_more", :locals => { :src_endpoint_id => sender_endPoints, :dst_endpoint_id => receiver_endPoints, :sender_nick => sender_endPoints[0].nick, :receiver_nick => receiver_endPoints[0].nick, :message_type => message_type } %>
</p>
<% end %>

<table summary="Meant.It Table"  border="0" cellspacing="0" cellpadding="0">
  <caption><em>Meant.It 'nick:<%= receiver_endPoints[0].nick %> <%= message_type %> nick:<%= sender_endPoints[0].nick %>'</em></caption>
  <thead>
    <tr>
      <th class='span-10'>Sender Nick</th>
      <th class='span-10'>Receiver Nick</th>
      <th class='span-2'>Count</th>
      <th class='span-2'>Value</th>
    </tr>
  </thead>
  <tbody>
<% r_mir_s_msg_uniq_hash.each { |hash_key, mir_arr| %>
    <tr>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].src_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <% # Just take any elem since they all have same source dest %>
        <%= render :partial => "shared/end_point_nick_col", :collection => [mir_arr[0].dst_endpoint], :locals => { :show_nick_force => true } %>
      </td>
      <td>
        <%= mir_arr.size %>
      </td>
      <td>
        Coming..
      </td>
    </tr>
<% } %>
  </tbody>
</table>
<% if r_mir_s_msg_uniq_hash.empty? %>
<p>
Nothing yet... <b>Don't be disheartened.  They'll come!</b>
</p>
<% else %>
<p>
  <%= render :partial => "shared/limit_meant_it_rels_with_more", :locals => { :src_endpoint_id => receiver_endPoints, :dst_endpoint_id => sender_endPoints, :sender_nick => receiver_endPoints[0].nick, :receiver_nick => sender_endPoints[0].nick, :message_type => message_type } %>
</p>
<% end %>
